<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>raspberrypi on Chase Sawyer</title>
    <link>https://chasesawyer.dev/tags/raspberrypi/</link>
    <description>Recent content in raspberrypi on Chase Sawyer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>shadowimmage@gmail.com (Chase Sawyer)</managingEditor>
    <webMaster>shadowimmage@gmail.com (Chase Sawyer)</webMaster>
    <lastBuildDate>Sat, 18 Jan 2020 13:04:13 -0800</lastBuildDate>
    
	<atom:link href="https://chasesawyer.dev/tags/raspberrypi/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Raspberry Pi HDMI Overscan</title>
      <link>https://chasesawyer.dev/post/2020/01/raspberry-pi-hdmi-overscan/</link>
      <pubDate>Sat, 18 Jan 2020 13:04:13 -0800</pubDate>
      <author>shadowimmage@gmail.com (Chase Sawyer)</author>
      <guid>https://chasesawyer.dev/post/2020/01/raspberry-pi-hdmi-overscan/</guid>
      <description>I had a problem when I moved my Raspberry Pi over to using a 4K display, which is just about the only resolution that professional displays come in these days, as manufacturers have all moved on to 4K as a standard. The problem was with overscanning and the display not having the ability to correctly scale the image signal coming from the Raspberry Pi, which was still a 1920x1080 signal.</description>
    </item>
    
    <item>
      <title>Docker-Balena-Electron-Raspberry Pi Digital Signage</title>
      <link>https://chasesawyer.dev/post/2019/06/docker-balena-electron-raspberry-pi-digital-signage/</link>
      <pubDate>Thu, 27 Jun 2019 18:43:25 -0700</pubDate>
      <author>shadowimmage@gmail.com (Chase Sawyer)</author>
      <guid>https://chasesawyer.dev/post/2019/06/docker-balena-electron-raspberry-pi-digital-signage/</guid>
      <description>Fair warning: This is a work in progress, and I&#39;m still working out the details for this project.
Github Repository
I have started to work on getting a digital signage solution set up where I can set up a Raspberry Pi3 to display information on a screen, and that has no local interaction (no UI, running headless without any keyboard/mouse). I wanted a solution to control updates to the app, which is where BalenaCloud comes in (along with their handy OS for the Raspberry Pi).</description>
    </item>
    
  </channel>
</rss>