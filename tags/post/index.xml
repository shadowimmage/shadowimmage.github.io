<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Post on Chase Sawyer</title>
    <link>https://chasesawyer.dev/tags/post/</link>
    <description>Recent content in Post on Chase Sawyer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>shadowimmage@gmail.com (Chase Sawyer)</managingEditor>
    <webMaster>shadowimmage@gmail.com (Chase Sawyer)</webMaster>
    <lastBuildDate>Sat, 09 Mar 2019 11:51:59 -0800</lastBuildDate>
    
	<atom:link href="https://chasesawyer.dev/tags/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Google .dev Domains, GitHub Pages, and Heroku Apps</title>
      <link>https://chasesawyer.dev/post/2019-03-09-google-dev-domains-github-pages-and-heroku-apps/</link>
      <pubDate>Sat, 09 Mar 2019 11:51:59 -0800</pubDate>
      <author>shadowimmage@gmail.com (Chase Sawyer)</author>
      <guid>https://chasesawyer.dev/post/2019-03-09-google-dev-domains-github-pages-and-heroku-apps/</guid>
      <description>At the end of February 2019, Google released general access to the .dev top level domain. I had heard about this happening about a year ago, and am now the happy owner of two .dev domains! One of these is chasesawyer.dev and will soon be the new home of this site!
But how to get it set up? When you buy a domain name, nothing is really set up for them - going to those addresses doesn&amp;rsquo;t point to anything Firefox and Google will just say &amp;ldquo;Server not found.</description>
    </item>
    
    <item>
      <title>Maintaining Older Django and Python Projects</title>
      <link>https://chasesawyer.dev/post/2019-02-21-updating_older_django_and_python_projects/</link>
      <pubDate>Thu, 21 Feb 2019 09:26:35 -0800</pubDate>
      <author>shadowimmage@gmail.com (Chase Sawyer)</author>
      <guid>https://chasesawyer.dev/post/2019-02-21-updating_older_django_and_python_projects/</guid>
      <description>I have been working on the backend for a project that I&amp;rsquo;ve written about {{previously&amp;ndash;link}}. The established tools server that will be supporting my new React frontend app(s) will be using a backend built on Python 2.7 and Django 1.11, and thus I&amp;rsquo;ve had to remember how to get a development environment set up that will appropriately support the project running locally on my machine. I have a personal site that runs on the same version of Django, but with Python 3.</description>
    </item>
    
    <item>
      <title>Long Time Update; New Projects</title>
      <link>https://chasesawyer.dev/post/2018-10-29-long-time-update/</link>
      <pubDate>Sat, 20 Oct 2018 19:06:53 -0700</pubDate>
      <author>shadowimmage@gmail.com (Chase Sawyer)</author>
      <guid>https://chasesawyer.dev/post/2018-10-29-long-time-update/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Author&amp;rsquo;s Note: this post has taken a long time to get written - so long, that I already have my 2018 Hactoberfest t-shirt and stickers! It&amp;rsquo;s content spans mid-October through December. I&amp;rsquo;ve done my best to make it a cohesive whole.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Debugging Node Applications</title>
      <link>https://chasesawyer.dev/post/2018-06-11-debugging-node-applications/</link>
      <pubDate>Mon, 11 Jun 2018 13:04:19 -0700</pubDate>
      <author>shadowimmage@gmail.com (Chase Sawyer)</author>
      <guid>https://chasesawyer.dev/post/2018-06-11-debugging-node-applications/</guid>
      <description>When developing an application or project with Node.js, debugging is an important aspect to getting to the bottom of issues. If you use an IDE (integrated development environment) or code editor that has built-in or supported debugging capacities, such as Visual Studio Code, then you have that ability already. But if you are someone who&amp;rsquo;s developing with a more basic code editor - such as Sublime Text, then you can still debug your Node.</description>
    </item>
    
    <item>
      <title>File Paths in Node</title>
      <link>https://chasesawyer.dev/post/2018-06-09-paths_in_node/</link>
      <pubDate>Sat, 09 Jun 2018 18:52:55 -0700</pubDate>
      <author>shadowimmage@gmail.com (Chase Sawyer)</author>
      <guid>https://chasesawyer.dev/post/2018-06-09-paths_in_node/</guid>
      <description>This week I had an interesting discussion with another new developer who was getting started working on an Express-based project and was frustrated by their static files working one day, and seemingly without provocation, not working the next. I knew from experiencing the same feeling when dealing with static files both in Django and Express that a static file loading problem is difficult to resolve, and how often the problem is often a simple one that is nonetheless opaque to a new developer unfamiliar with file systems and path resolution.</description>
    </item>
    
    <item>
      <title>Code Editors vs. Word Processors</title>
      <link>https://chasesawyer.dev/post/2018-06-06_code_editors_vs_word_processors/</link>
      <pubDate>Wed, 06 Jun 2018 20:43:45 -0700</pubDate>
      <author>shadowimmage@gmail.com (Chase Sawyer)</author>
      <guid>https://chasesawyer.dev/post/2018-06-06_code_editors_vs_word_processors/</guid>
      <description>Word processors are great for creating documents with a lot of rich formatting, but all that stuff can be a huge distraction. Code editors on the other hand are amazingly good for writing - the writing where the only thing that actually matters is the content, and not the format.
While it&amp;rsquo;s probably been hashed out and written about a lot by other people, the one thing, the killer aspect of it for me, is the ability to scroll the page down, so that whenever you want, you can always return to that feeling of having a blank canvas to write upon.</description>
    </item>
    
    <item>
      <title>New Free Code Camp Cert</title>
      <link>https://chasesawyer.dev/post/2018-06-05-new_free_code_camp_cert/</link>
      <pubDate>Tue, 05 Jun 2018 23:04:02 -0700</pubDate>
      <author>shadowimmage@gmail.com (Chase Sawyer)</author>
      <guid>https://chasesawyer.dev/post/2018-06-05-new_free_code_camp_cert/</guid>
      <description>I got my back-end (now API and Microservice) cert today from Free Code Camp! https://www.freecodecamp.org/certification/shadowimmage/apis-and-microservices Hooray!
It&amp;rsquo;s been a year since I started working through the Free Code Camp curriculum, and it feels good to finally have finished the API work. I feel like I have a pretty solid grasp now on how to build and arrange an API, which I hope will help me in the future when I try to do more API work.</description>
    </item>
    
    <item>
      <title>Logo Design</title>
      <link>https://chasesawyer.dev/post/2018-05-18-logo-design/</link>
      <pubDate>Fri, 18 May 2018 14:45:08 -0700</pubDate>
      <author>shadowimmage@gmail.com (Chase Sawyer)</author>
      <guid>https://chasesawyer.dev/post/2018-05-18-logo-design/</guid>
      <description>I spent my sick day today designing a new logo for the site using Inkscape. I knew that it had to be something that was unique, so I went online looking around for resources on designing and producing a logo. I know that SVGs are great, because you will never have scaling issues - if you need a larger version, you can simply export it at higher resolution. Or lower.</description>
    </item>
    
    <item>
      <title>Timestamp Microservice</title>
      <link>https://chasesawyer.dev/post/2018-05-12-timestampms/</link>
      <pubDate>Sat, 12 May 2018 00:00:00 +0000</pubDate>
      <author>shadowimmage@gmail.com (Chase Sawyer)</author>
      <guid>https://chasesawyer.dev/post/2018-05-12-timestampms/</guid>
      <description>&lt;p&gt;The goal is to create a microservice that will take a date string or a unix timestamp and make a JSON response with both versions of the given timestamp / date.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hugo Gotchas</title>
      <link>https://chasesawyer.dev/post/2018-05-10-hugo-gotchas/</link>
      <pubDate>Thu, 10 May 2018 21:04:59 -0700</pubDate>
      <author>shadowimmage@gmail.com (Chase Sawyer)</author>
      <guid>https://chasesawyer.dev/post/2018-05-10-hugo-gotchas/</guid>
      <description>Gotchas In order of the issue being found:
Is Strange (Hugo) (Template Logic) Hugo templates use strange logic - for conditional statements, Hugo uses Polish or prefix notation for the operators. This meas that instead of writing if this and that, you have to write if and this that. For more complex arrangements of logical conditions, say for a situation in which you need to check three conditions, you have to write it as: if and (first) ( and (second) (third)) which, in a infix notation style, would have been written if first and second and third.</description>
    </item>
    
    <item>
      <title>New Static Site with Hugo</title>
      <link>https://chasesawyer.dev/post/2018-05-09-new-static-site-with-hugo/</link>
      <pubDate>Wed, 09 May 2018 20:51:48 -0700</pubDate>
      <author>shadowimmage@gmail.com (Chase Sawyer)</author>
      <guid>https://chasesawyer.dev/post/2018-05-09-new-static-site-with-hugo/</guid>
      <description>Built a new site, leaving Jekyll for Hugo, for my github.io page.
Changes Moved all my old Jekyll files to a new subdirectory in order to maintain access to the old code and posts, and then transition all the content over to the main Hugo site as settings come together. One major advantage of Hugo is that the build process is super fast, so I&amp;rsquo;ve been looking at how to integrate CircleCI with Hugo builds.</description>
    </item>
    
  </channel>
</rss>